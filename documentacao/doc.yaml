swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "MaxStream"
  termsOfService: "https://api.e2adv.io/maxstream/termsOfService"
  contact:
    email: "contact@e2adv.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "api.e2adv.io"
basePath: "/maxstream/v1"
tags:
  - name: "partnerships"
    description: "Gerenciamento dos parceiros dentro da plataforma"
  - name: "users"
    description: "Gerenciamento dos usuários que utilizam a aplicação"
  - name: "searches"
    description: "Pesquisa otimizada dos links dos streamings"
schemes:
  - "https"
paths:
  /partnerships:
    post:
      tags:
        - "partnerships"
      summary: "Adicionar uma nova parceria na plataforma"
      description: "Os parceiros que serão levados em conta para pesquisa do streaming"
      operationId: "addPartnership"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "partnerships"
          description: "Objeto do tipo partnerships que será adicionado ao banco de dados"
          required: true
          schema:
            $ref: "#/definitions/Partnership"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "write:partnerships"
    get:
      tags:
        - "partnerships"
      summary: "Consultar parceiros registrados na plataforma"
      description: ""
      operationId: "findPartnership"
      produces:
        - "application/json"
      parameters:
        - name: "_offset"
          in: "query"
          description: "offset da paginação"
          required: false
          type: "number"
          default: "0"
          collectionFormat: "multi"
        - name: "_limit"
          in: "query"
          description: "limite da paginação"
          required: false
          type: "number"
          default: "50"
          collectionFormat: "multi"
      responses:
        "200":
          description: "Consulta realizada com sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "read:partnerships"
  /partnerships/{cnpj}:
    put:
      tags:
        - "partnerships"
      summary: "Modifica um parceiro na plataforma"
      description: ""
      operationId: "updatePartnership"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "cnpj"
          in: "path"
          description: "CNPJ do parceiro"
          required: true
          type: "string"
          default: "0111521345870"
        - in: "body"
          name: "partnership"
          description: "Objeto do tipo partnership que será modificado (ou criado) ao banco de dados"
          required: true
          schema:
            $ref: "#/definitions/Partnership"
      responses:
        "200":
          description: "Dados do parceiro atualizados com sucesso"
          schema:
            $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "write:partnerships"
    get:
      tags:
        - "partnerships"
      summary: "Verifica um parceiro específico na plataforma"
      description: ""
      operationId: "findPartnershipByCnpj"
      produces:
        - "application/json"
      parameters:
        - name: "cnpj"
          in: "path"
          description: "CNPJ do parceiro"
          required: true
          type: "string"
          default: "0111521345870"
      responses:
        "200":
          description: "Consulta realizada com sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "read:partnerships"
    delete:
      tags:
        - "partnerships"
      summary: "Deleta um parceiro da plataforma de acordo com seu cnpj"
      description: ""
      operationId: "deletePartnership"
      produces:
        - "application/json"
      parameters:
        - name: "cnpj"
          in: "path"
          description: "CNPJ do parceiro"
          required: true
          type: "string"
          default: "0111521345870"
      responses:
        "200":
          description: "Parceiro removido com sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "write:partnerships"
  /partnerships/{cnpj}/ratings:
    post:
      tags:
        - "partnerships"
      summary: "Classifica um parceiro na plataforma"
      description: "Classificação das APIs parceiras (classificação dos usuários)"
      operationId: "ratePartnership"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "cnpj"
          in: "path"
          description: "CNPJ do parceiro"
          required: true
          type: "string"
          default: "0111521345870"
        - in: "body"
          name: "rating"
          description: "Objeto do tipo partnership que será modificado (ou criado) ao banco de dados"
          required: true
          schema:
            $ref: "#/definitions/Rating"
      responses:
        "200":
          description: "Parceiro avaliado com sucesso"
          schema:
            $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "write:partnerships"
  /users:
    post:
      tags:
        - "users"
      summary: "Cadastrar um novo usuário na plataforma"
      description: "Os usuários que acessarão a plataforma para consumir o conteúdo"
      operationId: "addUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "users"
          description: "Objeto do tipo users que será adicionado ao banco de dados"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: "Created"
          schema:
            $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "write:users"
    get:
      tags:
        - "users"
      summary: "Consultar usuários cadastrados na plataforma"
      description: ""
      operationId: "findUser"
      produces:
        - "application/json"
      parameters:
        - name: "_offset"
          in: "query"
          description: "offset da paginação"
          required: false
          type: "number"
          default: "0"
          collectionFormat: "multi"
        - name: "_limit"
          in: "query"
          description: "limite da paginação"
          required: false
          type: "number"
          default: "50"
          collectionFormat: "multi"
      responses:
        "200":
          description: "Consulta realizada com sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "read:users"
  /users/{code}:
    put:
      tags:
        - "users"
      summary: "Modifica os dados de um usuário na plataforma"
      description: ""
      operationId: "updateUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "code"
          in: "path"
          description: "Código do usuário"
          required: true
          type: "string"
          default: "CX1JD4GKQW"
        - in: "body"
          name: "user"
          description: "Objeto do tipo user que será modificado (ou criado) ao banco de dados"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "Dados do parceiro atualizados com sucesso"
          schema:
            $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "write:users"
    get:
      tags:
        - "users"
      summary: "Verifica um usuário específico na plataforma"
      description: ""
      operationId: "findUserByCode"
      produces:
        - "application/json"
      parameters:
        - name: "code"
          in: "path"
          description: "Código do usuário"
          required: true
          type: "string"
          default: "CX1JD4GKQW"
      responses:
        "200":
          description: "Consulta realizada com sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "read:users"
    delete:
      tags:
        - "users"
      summary: "Deleta um usuário da plataforma de acordo com seu código"
      description: ""
      operationId: "deleteUser"
      produces:
        - "application/json"
      parameters:
        - name: "code"
          in: "path"
          description: "Código do usuário"
          required: true
          type: "string"
          default: "CX1JD4GKQW"
      responses:
        "200":
          description: "Usuário removido com sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "write:users"
  /searches:
    get:
      tags:
        - "searches"
      summary: "Consulta os links dos streamings"
      description: ""
      operationId: "findStreams"
      produces:
        - "application/json"
      parameters:
        - name: "keywords"
          in: "query"
          description: "parâmetro de busca"
          required: true
          type: "string"
          default: "Flash"
          collectionFormat: "multi"
        - name: "category"
          in: "query"
          description: "categoria da busca"
          required: true
          type: "string"
          default: "Movie"
          collectionFormat: "multi"
        - name: "_offset"
          in: "query"
          description: "offset da paginação"
          required: false
          type: "number"
          default: "0"
          collectionFormat: "multi"
        - name: "_limit"
          in: "query"
          description: "limite da paginação"
          required: false
          type: "number"
          default: "5"
          collectionFormat: "multi"
      responses:
        "200":
          description: "Consulta realizada com sucesso"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseOutput"
        "400":
          description: "Bad Request"
        "401":
          description: "Unauthorized"
        "403":
          description: "Forbidden"
        "404":
          description: "Not Found"
        "429":
          description: "Too Many Requests"
        "500":
          description: "Internal Server Error"
        "501":
          description: "Not Implemented"
        "503":
          description: "Service Unavailable"
      security:
      - maxstream_auth:
        - "read:partnerships"
securityDefinitions:
  maxstream_auth:
    type: "oauth2"
    authorizationUrl: "http://api.e2adv.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:partnerships: "modify partnerships in your account"
      read:partnerships: "read your partnerships"
      write:users: "modify users in your account"
      read:users: "read your users"
definitions:
  ResponseOutput:
    type: "object"
    required:
      - "success"
      - "message"
      - "date"
      - "data"
    properties:
      success:
        type: "boolean"
        example: true
      message:
        type: "string"
        example: "Operação realizada com sucesso"
      date:
        type: "string"
        example: "2020-10-17T01:04:00.300Z"
      data:
        type: "object"
        example: []
  Partnership:
    type: "object"
    required:
      - "cnpj"
      - "name"
      - "category"
    properties:
      cnpj:
        type: "string"
        example: "0111521345870"
      name:
        type: "string"
        example: "Netflix"
      category:
        type: "string"
        example: "Movies"
      rating: 
        type: object
        example:
          $ref: "#/definitions/Rating"
  Rating:
    type: "object"
    required:
      - "grade"
      - "date"
    properties:
      grade:
        type: "number"
        example: 8
        minimum: 0
        maximum: 10
      date:
        type: "string"
        example: "2020-10-17T01:04:00.300Z"
  User:
    type: "object"
    required:
      - "code"
      - "name"
      - "age"
      - "genre"
      - "username"
      - "password"
    properties:
      code:
        type: "string"
        example: "CX1JD4GKQW"
      name:
        type: "string"
        example: "Fulano de Tal"
      age:
        type: "number"
        example: 25
      genre:
        type: "string"
        example: "male"
      username:
        type: "string"
        example: "fulano"
      password:
        type: "string"
        example: "deTal"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
